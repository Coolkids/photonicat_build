name: photonicat-build

on:
  workflow_dispatch:
  schedule:
      - cron: '0 0 15 * *'
    

jobs:
  build_openwrt:
    name: Build photonicat OpenWrt firmware
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{secrets.TOKEN}}
      
      - name: Set variables
        run: |
          sudo -E timedatectl set-timezone Asia/Shanghai
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          
      - name: Tag release
        id: create_tag
        run: |
          CURRENT_DATE=$(date +'%y.%m')
          # 检查标签是否存在
          ./tag.sh
          git tag -a v$CURRENT_DATE -m "Release $CURRENT_DATE"
          git push origin v$CURRENT_DATE

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
          libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
          nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
          python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev yasm
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

          df -h

      - name: Build
        run: |
          ./build.sh

      - name: Clean Build Files
        run: |
          rm -rf ./immortalwrt/staging_dir
          rm -rf ./immortalwrt/build_dir

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./immortalwrt/bin/targets/ -type d -name "packages")
          cp -rf $(find ./immortalwrt/bin/targets/ -type f -name "immortalwrt-*") ./artifact/firmware/
          cp -rf $(find ./immortalwrt/bin/targets/ -type f -name "sha256sums") ./artifact/firmware/
          cp -rf $(find ./immortalwrt/bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./immortalwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Clean Bin Files
        run: |
          rm -rf ./immortalwrt/bin

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware/

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ./artifact/firmware/*
          overwrite: true
          release_name: Release ${{ steps.create_tag.outputs.tag }}
          tag: ${{ steps.create_tag.outputs.tag }}
          file_glob: true
          body: |
            Release ${{ steps.create_tag.outputs.tag }}
         
      - name: Delete loder releases
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 5
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}    